{"version":3,"sources":["APIcalls/Get-Jokes.js","Components/Footer/Footer.js","Components/Header/Header.js","Components/JokeDiv/JokeDiv.js","Assets/loading.png","Components/Main/Main.js","Assets/chuck.jpeg","Components/Likes/Likes.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["request","getJokes","fetch","then","res","json","Footer","className","href","type","value","Header","to","JokeDiv","props","joke","decodeHtml","theJoke","isMain","onClick","like","theKey","dislike","Main","jokes","length","sortedJokes","sort","a","b","localeCompare","map","element","src","loading","alt","Likes","likes","JSON","parse","localStorage","getItem","isLikes","chuck","App","html","areaElement","document","createElement","innerHTML","setTimeout","setState","state","setItem","stringify","newArr","theLikes","console","log","forEach","i","push","exact","path","render","Fragment","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16cd088c.chunk.js","sourcesContent":["let request = {\n    getJokes: () => {\n        return fetch(`https://api.icndb.com/jokes/random/558?exclude=[explicit]`)\n        .then(res => res.json())\n    }\n}\nexport default request;","import React from 'react'\nimport './Footer.scss'\n\nexport default function Footer() {\n    return (\n        <div className='footer-body'>\n            <a \n            href='https://chriscastanuela.github.io/cac/'\n            className='footer-link'\n            ><input type=\"button\" className='footer-title' value=\"Author\"/></a>\n        </div>\n    )\n}","import React from 'react';\nimport './Header.scss';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Header() {\n    return (\n        <div className='header-body'>\n            <NavLink to=\"/\">\n                <h1 className='header-title'>Chuck Norris Jokes for the Bored</h1>\n            </NavLink>\n            <NavLink to=\"/likes\">\n                <input type=\"button\" className='thumbs-up-list' value=\"👍\" />\n            </NavLink>\n        </div>\n        //Hello World\n    )\n}\n","import './Joke-Div.scss'\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function JokeDiv(props) {\n    let joke = props.decodeHtml(props.theJoke);\n    if (props.isMain) {\n        return (\n            <section className='joke'>\n                <div className='joke-div'>\n                    <input type=\"button\" className='thumbs' value='👍' onClick={() => props.like(joke)} \n                    />\n                    <p className='number'>{props.theKey}</p>\n                    <p className='the-joke'>{joke}</p>\n                </div>\n            </section>\n        )\n    } else {\n        return (\n            <section className='joke'>\n                <div className='joke-div'>\n                    <input type=\"button\" className='thumbs' value=\"👎\" onClick={() => props.dislike(joke)}/>\n                    <p className='the-joke'>{joke}</p>\n                </div>\n            </section>\n        )\n    }\n}\n\nJokeDiv.propTypes = {\n    decodeHtml: PropTypes.func,\n    theJoke: PropTypes.string,\n    isMain: PropTypes.bool,\n    like: PropTypes.func,\n    dislike: PropTypes.func,\n};","export default __webpack_public_path__ + \"static/media/loading.006e018f.png\";","import React from 'react';\nimport './Main.scss';\nimport JokeDiv from '../JokeDiv/JokeDiv';\nimport loading from '../../Assets/loading.png';\nimport PropTypes from 'prop-types';\n\nexport default function Main(props) {\n    let theKey = 0;\n    if (props.jokes.length > 0) {\n        let sortedJokes = props.jokes[0].value.sort((a, b) => {\n            return a.joke.localeCompare(b.joke)\n        })\n        return (\n            <div className='main-section'>\n                {\n                    sortedJokes.map(element => {\n                        theKey += 1;\n                        return (\n                            <JokeDiv \n                            key={theKey}\n                            decodeHtml={props.decodeHtml}\n                            theJoke={element.joke}\n                            like={props.like}\n                            isMain={props.isMain}\n                            theKey={theKey}\n                            />\n                        )\n                    })\n                }\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h5 className='loading-message'>Loading</h5>\n                <img src={loading} alt=\"loading\" className='loading'/>\n            </div>\n        ) \n    }\n}\n\nMain.propTypes = {\n    decodeHtml: PropTypes.func,\n    jokes: PropTypes.array,\n    like: PropTypes.func,\n    isMain: PropTypes.bool,\n};","export default __webpack_public_path__ + \"static/media/chuck.77aae17a.jpeg\";","import './Likes.scss'\nimport React from 'react'\nimport chuck from '../../Assets/chuck.jpeg';\nimport JokeDiv from '../JokeDiv/JokeDiv';\nimport PropTypes from 'prop-types';\n\n\nexport default function Likes(props) {\n    let theKey = 0;\n    let likes = JSON.parse(localStorage.getItem('likes'));\n    if (likes.length > 0) {\n        let sortedJokes = likes.sort((a, b) => {\n            return a.localeCompare(b)\n        });\n        return (\n            <div className='likes-section'>\n                {\n                    sortedJokes.map(element => {\n                        theKey += 1;\n                        return (\n                            <JokeDiv\n                            key={theKey}\n                            decodeHtml={props.decodeHtml}\n                            theJoke={element}\n                            dislike={props.dislike}\n                            isLikes={props.isLikes}\n                            />\n                        )\n                    })\n                }\n            </div>\n        )\n    // if (props.likes.length > 0) {\n    //     let sortedJokes = props.likes.sort((a, b) => {\n    //         return a.localeCompare(b)\n    //     });\n    //     return (\n    //         <div className='likes-section'>\n    //             {\n    //                 sortedJokes.map(element => {\n    //                     theKey += 1;\n    //                     return (\n    //                         <JokeDiv\n    //                         key={theKey} \n    //                         decodeHtml={props.decodeHtml}\n    //                         theJoke={element}\n    //                         dislike={props.dislike}\n    //                         isLikes={props.isLikes}\n    //                         />\n    //                     )\n    //                 })\n    //             }\n    //         </div>\n    //     )\n    } else {\n        return  (\n            <div>\n                <h1 className='likes-header'>You have no likes</h1>\n                <img \n                src={chuck} \n                alt=\"loading\" \n                className='chuck'\n                />\n            </div>\n        )\n    }\n}\n\nLikes.propTypes = {\n    decodeHtml: PropTypes.func,\n    jokes: PropTypes.array,\n    dislike: PropTypes.func,\n    isLikes: PropTypes.bool,\n};","import {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport './App.scss';\n\nimport request from '../../APIcalls/Get-Jokes';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header'\nimport Main from '../Main/Main'\nimport Likes from '../Likes/Likes'\n\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      likes: [],\n      jokes: [],\n    }\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      request.getJokes()\n      .then(res => (\n        console.log(res),\n        this.setState({jokes: [...[res]]}),\n        console.log(this.state)\n      ) )\n    }, 100)\n  }\n  decodeHtml = (html) => {\n    let areaElement = document.createElement(\"textarea\");\n    areaElement.innerHTML = html;\n    return areaElement.value;\n  }\n  like = (joke) => {\n    setTimeout(() =>  {\n      this.setState({likes: [...this.state.likes, joke]});\n      setTimeout(() =>  {\n        localStorage.setItem('likes', JSON.stringify(this.state.likes));\n      }, 100)\n    }, 100);\n  }\n  dislike = (joke) => {\n    let newArr = [];\n    let theLikes = JSON.parse(localStorage.getItem('likes'));\n    console.log(theLikes)\n    theLikes.forEach(i => {\n      if (i !== joke) {\n        newArr.push(i)\n      }\n    })\n    this.setState({likes: newArr});\n    localStorage.setItem('likes', JSON.stringify(newArr));\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <Main\n              decodeHtml={this.decodeHtml}\n              jokes={this.state.jokes}\n              like={this.like}\n              isMain={true}\n              />\n            </React.Fragment>\n          )}/>\n          <Route\n          path='/likes'\n          render={props => (\n            <Likes\n            decodeHtml={this.decodeHtml}\n            likes={this.state.likes}\n            dislike={this.dislike}\n            isLikes={true}\n            />\n          )}\n          />\n          <Switch>\n            <Redirect to='/'/>\n          </Switch>\n          <Footer/>\n        </div>\n      </Router>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}